
# my dockerfile cmd

RUN expect -c "\
    spawn ./bin/elasticsearch-certutil http ; \
	expect \"Generate a CSR? [y/N]\"; \
	send \"n\r\"; \
	expect \"Use an existing CA? [y/N]\"; \
	send \"y\r\"; \
	expect \"CA Path:\"; \
	send \"
/usr/share/elasticsearch/config/elastic-stack-ca.p12
\r\"; \
	expect \"Password for elastic-stack-ca.p12:\"; \
	send \"\r\"; \
	expect \"For how long should your certificate be valid? [5y]\"; \
	send \"90d\r\"; \
	expect \"Generate a certificate per node? [y/N]\"; \
	send \"n\r\"; \
	expect \"When you are done, press <ENTER> once more to move on to the next step.\"; \
	send \"localhost\r\"; \
	send \"transcendence42\r\"; \
	send \"transcendence42.rocks\r\"; \
	send \"\r\"; \
	expect \"Is this correct [Y/n]\"; \
	send \"y\r\"; \
	expect \"When you are done, press <ENTER> once more to move on to the next step.\"; \
	send \"127.0.0.1\r\"; \
            172.18.0.2
	send \"\r\"; \
	expect \"Is this correct [Y/n]\"; \
	send \"y\r\"; \
	expect \"Do you wish to change any of these options? [y/N]\"; \
	send \"n\r\"; \
	expect \"Provide a password for the "http.p12" file:  [<ENTER> for none]\"; \
	send \"${ELASTIC_PASSWORD}\r\"; \
	expect \"Repeat password to confirm:\"; \
	send \"${ELASTIC_PASSWORD}\r\"; \
	expect \"What filename should be used for the output zip file? [/usr/share/elasticsearch/elasticsearch-ssl-http.zip]\"; \
	send \"/usr/share/elasticsearch/elasticsearch-ssl-http.zip\r\"; \
    interact"








# copilot suggestion for error handing
	RUN expect -c "\
    set timeout 60; \
    spawn ./bin/elasticsearch-certutil http ; \
    expect { \
        \"Generate a CSR? [y/N]\" { \
            send \"n\r\"; \
            exp_continue; \
        } \
        \"Use an existing CA? [y/N]\" { \
            send \"y\r\"; \
            exp_continue; \
        } \
        \"CA Path:\" { \
            send \"/usr/share/elasticsearch/config/elastic-stack-ca.p12\r\"; \
            exp_continue; \
        } \
        \"Password for elastic-stack-ca.p12:\" { \
            send \"\r\"; \
            exp_continue; \
        } \
        \"For how long should your certificate be valid? [5y]\" { \
            send \"90d\r\"; \
            exp_continue; \
        } \
        timeout { \
            puts \"Operation timed out\"; \
            exit 1; \
        } \
        eof { \
            puts \"Unexpected end of file or error\"; \
            exit 1; \
        } \
        \"Generate a certificate per node? [y/N]\" { \
            send \"n\r\"; \
            exp_continue; \
        } \
        - default { \
            puts \"Unexpected output\"; \
            exit 1; \
        } \
    }; \
    # Continue with the rest of your expect script here, following the same pattern for handling errors and timeouts \
"