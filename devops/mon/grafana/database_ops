    {

      "targets": [
        {
          "expr": "sum(irate(django_db_execute_total{namespace=~\"$namespace\", app=~\"^$app$\"}[1m])) by (vendor)",
          "format": "time_series",
          "intervalFactor": 1,
          "legendFormat": "{{vendor}}",
          "refId": "A"
        }
      ],

      "title": "Database Ops",
    }




    {
		"targets": [
		  {
			"expr": "sum(irate(django_model_deletes_total{namespace=~\"$namespace\", app=~\"^$app$\"}[1m])) by (model)",
			"format": "time_series",
			"intervalFactor": 1,
			"legendFormat": "[{{model}}] deletes",
			"refId": "A"
		  },
		  {
			"expr": "sum(irate(django_model_inserts_total{namespace=~\"$namespace\", app=~\"^$app$\"}[1m])) by (model)",
			"format": "time_series",
			"intervalFactor": 1,
			"legendFormat": "[{{model}}] inserts",
			"refId": "B"
		  },
		  {
			"expr": "sum(irate(django_model_updates_total{namespace=~\"$namespace\", app=~\"^$app$\"}[1m])) by (model)",
			"format": "time_series",
			"intervalFactor": 1,
			"legendFormat": "[{{model}}] updates",
			"refId": "C"
		  }
		],
		"title": "Models stats",
	  }


	  {
		"targets": [
		  {
			"datasource": {
			  "type": "prometheus",
			  "uid": "$datasource"
			},
			"expr": "sum (\n  rate (\n    django_db_execute_total {\n      namespace=~\"$namespace\",\n      job=~\"$job\",\n    }[$__rate_interval]\n  )\n) by (namespace, job)\n"
		  }
		],
		"title": "Database Ops",
		"type": "stat"
	  },



	  {
		"targets": [
		  {
			"datasource": {
			  "type": "prometheus",
			  "uid": "$datasource"
			},
			"expr": "sum (\n  rate (\n    django_cache_get_hits_total {\n      namespace=~\"$namespace\",\n      job=~\"$job\",\n    }[30m]\n  )\n) by (namespace, job)\n/\nsum (\n  rate (\n    django_cache_get_total {\n      namespace=~\"$namespace\",\n      job=~\"$job\",\n    }[30m]\n  )\n) by (namespace, job)\n"
		  }
		],
		"title": "Cache Hitrate [30m]",
		"type": "stat"
	  },




	  {
		"targets": [
		  {
			"datasource": {
			  "type": "prometheus",
			  "uid": "$datasource"
			},
			"expr": "max (\n  django_migrations_applied_total {\n      namespace=\"$namespace\",\n      job=~\"$job\"\n  }\n) by (namespace, job)\n"
		  }
		],
		"title": "Migrations Applied",
		"type": "stat"
	  },



	  {
		"targets": [
		  {
			"datasource": {
			  "type": "prometheus",
			  "uid": "$datasource"
			},
			"expr": "max (\n  django_migrations_unapplied_total {\n      namespace=\"$namespace\",\n      job=~\"$job\"\n  }\n) by (namespace, job)\n"
		  }
		],
		"title": "Migrations Unapplied",
		"type": "stat"
	  },

	  {
		"targets": [
		  {
			"datasource": {
			  "type": "prometheus",
			  "uid": "$datasource"
			},
			"expr": "round(\n  topk(10,\n    sum by (type) (\n      increase(\n        django_db_errors_total{\n          namespace=~\"$namespace\",\n          job=~\"$job\",\n        }[1w]\n      ) > 0\n    )\n  )\n)\n",
			"format": "table",
			"instant": true
		  }
		],
		"title": "Top Database Errors (1w)",
		"transformations": [
		  {
			"id": "organize",
			"options": {
			  "excludeByName": {
				"Time": true
			  },
			  "indexByName": {
				"job": 1,
				"namespace": 0,
				"type": 2
			  },
			  "renameByName": {
				"job": "Job",
				"namespace": "Namespace",
				"type": "Type"
			  }
			}
		  }
		],
		"type": "table"
	  },


	  {
		"targets": [
		  {
			"datasource": {
			  "type": "prometheus",
			  "uid": "$datasource"
			},
			"expr": "round(\n  sum(\n    increase(\n      django_db_new_connections_total{\n        namespace=~\"$namespace\",\n        job=~\"$job\",\n      }[$__rate_interval]\n    ) > 0\n  ) by (namespace, job, vendor)\n)\n",
			"legendFormat": "{{ vendor }}"
		  }
		],
		"title": "Database Connections",
		"type": "timeseries"
	  },


	  {
		"targets": [
		  {
			"datasource": {
			  "type": "prometheus",
			  "uid": "$datasource"
			},
			"expr": "histogram_quantile(0.50,\n  sum(\n    irate(\n      django_db_query_duration_seconds_bucket{\n        namespace=~\"$namespace\",\n        job=~\"$job\",\n      }[$__rate_interval]\n    ) > 0\n  ) by (vendor, namespace, job, le)\n)\n",
			"legendFormat": "50 - {{ vendor }}"
		  },
		  {
			"datasource": {
			  "type": "prometheus",
			  "uid": "$datasource"
			},
			"expr": "histogram_quantile(0.95,\n  sum(\n    irate(\n      django_db_query_duration_seconds_bucket{\n        namespace=~\"$namespace\",\n        job=~\"$job\",\n      }[$__rate_interval]\n    ) > 0\n  ) by (vendor, namespace, job, le)\n)\n",
			"legendFormat": "95 - {{ vendor }}"
		  },
		  {
			"datasource": {
			  "type": "prometheus",
			  "uid": "$datasource"
			},
			"expr": "histogram_quantile(0.99,\n  sum(\n    irate(\n      django_db_query_duration_seconds_bucket{\n        namespace=~\"$namespace\",\n        job=~\"$job\",\n      }[$__rate_interval]\n    ) > 0\n  ) by (vendor, namespace, job, le)\n)\n",
			"legendFormat": "99 - {{ vendor }}"
		  },
		  {
			"datasource": {
			  "type": "prometheus",
			  "uid": "$datasource"
			},
			"expr": "histogram_quantile(0.999,\n  sum(\n    irate(\n      django_db_query_duration_seconds_bucket{\n        namespace=~\"$namespace\",\n        job=~\"$job\",\n      }[$__rate_interval]\n    ) > 0\n  ) by (vendor, namespace, job, le)\n)\n",
			"legendFormat": "99.9 - {{ vendor }}"
		  }
		],
		"title": "Database Latency",
		"type": "timeseries"
	  }




	  {
		"targets": [
		  {
			"datasource": {
			  "type": "prometheus",
			  "uid": "$datasource"
			},
			"expr": "sum(\n  rate(\n    django_cache_get_hits_total{\n      namespace=~\"$namespace\",\n      job=~\"$job\",\n    }[$__rate_interval]\n  ) > 0\n) by (namespace, job, backend)\n",
			"legendFormat": "Hit - {{ backend }}"
		  },
		  {
			"datasource": {
			  "type": "prometheus",
			  "uid": "$datasource"
			},
			"expr": "sum(\n  rate(\n    django_cache_get_misses_total{\n      namespace=~\"$namespace\",\n      job=~\"$job\",\n    }[$__rate_interval]\n  ) > 0\n) by (namespace, job, backend)\n",
			"legendFormat": "Miss - {{ backend }}"
		  }
		],
		"title": "Cache Get",
		"type": "timeseries"
	  }




	  {
		"targets": [
		  {
			"datasource": {
			  "type": "prometheus",
			  "uid": "${DS_PROMETHEUS}"
			},
			"editorMode": "code",
			"exemplar": false,
			"expr": "sum(max_over_time(django_db_errors_total{app=~\"^$application$\"}[$__range]))",
			"format": "time_series",
			"instant": false,
			"legendFormat": "__auto",
			"range": true,
			"refId": "A"
		  }
		],
		"title": "DB Query Errors",
		"type": "gauge"
	  },


	  {
		"targets": [
		  {
			"datasource": {
			  "type": "prometheus",
			  "uid": "${DS_PROMETHEUS}"
			},
			"editorMode": "code",
			"expr": "sum(max_over_time(django_db_new_connection_errors_total{app=~\"^$application$\"}[$__range]))",
			"legendFormat": "__auto",
			"range": true,
			"refId": "A"
		  }
		],
		"title": "DB Connection Errors",
		"type": "gauge"
	  },


	  {
		"targets": [
		  {
			"datasource": {
			  "type": "prometheus",
			  "uid": "${DS_PROMETHEUS}"
			},
			"editorMode": "code",
			"expr": "sum(django_cache_get_hits_total{app=~\"^$application$\"}) by (backend) / sum(django_cache_get_total{app=~\"^$application$\"}) by (backend)",
			"legendFormat": "__auto",
			"range": true,
			"refId": "A"
		  }
		],
		"title": "Cache Hit Ratio",
		"type": "gauge"
	  },


	  {
		"targets": [
		  {
			"datasource": {
			  "type": "prometheus",
			  "uid": "${DS_PROMETHEUS}"
			},
			"editorMode": "code",
			"expr": "sum(irate(django_db_execute_total{app=~\"^$application$\"}[$__rate_interval])) by (vendor)",
			"legendFormat": "__auto",
			"range": true,
			"refId": "A"
		  }
		],
		"title": "Database Total Queries",
		"type": "timeseries"
	  },



	  {
		"targets": [
		  {
			"datasource": {
			  "type": "prometheus",
			  "uid": "${DS_PROMETHEUS}"
			},
			"editorMode": "code",
			"expr": "sum(rate(django_db_query_duration_seconds_bucket{app=~\"^$application$\"}[$__rate_interval])) by (le)",
			"format": "heatmap",
			"legendFormat": "{{le}}",
			"range": true,
			"refId": "A"
		  }
		],
		"title": "Database Query Duration",
		"type": "heatmap"
	  }



	  
